# -*- coding: utf-8 -*-
"""stocks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cv1myOkn_TlsMz0A5f3s_IdA1BVvO48B
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

data = pd.read_csv('/content/ADANIPORTS.csv')
data

data['Date'] = pd.to_datetime(data['Date'])
data.set_index('Date', inplace=True)
data = data[['Close']]

scaler = MinMaxScaler()
data['Close'] = scaler.fit_transform(data['Close'].values.reshape(-1, 1))

sequence_length = 60
X, y = [], []

for i in range(len(data) - sequence_length):
    X.append(data.iloc[i:i+sequence_length].values)
    y.append(data.iloc[i+sequence_length].values)

X = np.array(X)
y = np.array(y)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = Sequential()
model.add(LSTM(50, activation='relu', input_shape=(sequence_length, 1)))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mean_squared_error')
model.fit(X_train, y_train, epochs=50, batch_size=64)

train_predictions = model.predict(X_train)
test_predictions = model.predict(X_test)

train_predictions = scaler.inverse_transform(train_predictions)
test_predictions = scaler.inverse_transform(test_predictions)

train_rmse = np.sqrt(mean_squared_error(scaler.inverse_transform(y_train), train_predictions))
test_rmse = np.sqrt(mean_squared_error(scaler.inverse_transform(y_test), test_predictions))

print(f'Training RMSE: {train_rmse}')
print(f'Test RMSE: {test_rmse}')

plt.figure(figsize=(12, 6))
plt.plot(scaler.inverse_transform(y_test), label='Actual Prices')
plt.plot(test_predictions, label='Predicted Prices')
plt.legend()
plt.show()
